// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonWebApi.Models;

namespace SalonWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201208162033_ChangedCarShowroomModel")]
    partial class ChangedCarShowroomModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("SalonWebApi.Models.CarShowroom", b =>
                {
                    b.Property<int>("CarShowroomId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CarShowroomContainerId")
                        .HasColumnType("int");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarShowroomId");

                    b.HasIndex("CarShowroomContainerId");

                    b.ToTable("CarShowrooms");
                });

            modelBuilder.Entity("SalonWebApi.Models.CarShowroomContainer", b =>
                {
                    b.Property<int>("CarShowroomContainerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("CarShowroomContainerId");

                    b.ToTable("CarShowroomContainers");
                });

            modelBuilder.Entity("SalonWebApi.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("SalonId")
                        .HasColumnType("int");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<double>("value")
                        .HasColumnType("float");

                    b.HasKey("RatingId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SalonWebApi.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("Booked")
                        .HasColumnType("bit");

                    b.Property<int>("CarShowroomId")
                        .HasColumnType("int");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EngineCapacity")
                        .HasColumnType("float");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Mileage")
                        .HasColumnType("float");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("ProductionYear")
                        .HasColumnType("int");

                    b.Property<string>("SalonName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VehicleId");

                    b.HasIndex("CarShowroomId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("SalonWebApi.Models.CarShowroom", b =>
                {
                    b.HasOne("SalonWebApi.Models.CarShowroomContainer", null)
                        .WithMany("salons")
                        .HasForeignKey("CarShowroomContainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalonWebApi.Models.Vehicle", b =>
                {
                    b.HasOne("SalonWebApi.Models.CarShowroom", null)
                        .WithMany("CarList")
                        .HasForeignKey("CarShowroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SalonWebApi.Models.CarShowroom", b =>
                {
                    b.Navigation("CarList");
                });

            modelBuilder.Entity("SalonWebApi.Models.CarShowroomContainer", b =>
                {
                    b.Navigation("salons");
                });
#pragma warning restore 612, 618
        }
    }
}
